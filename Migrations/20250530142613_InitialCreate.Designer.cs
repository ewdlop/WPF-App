// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfApp2.Data;

#nullable disable

namespace WpfApp2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250530142613_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("WpfApp2.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationVersion")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("ExecutionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccessful")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Action")
                        .HasDatabaseName("IX_AuditLogs_Action");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EntityId")
                        .HasDatabaseName("IX_AuditLogs_EntityId");

                    b.HasIndex("EntityType")
                        .HasDatabaseName("IX_AuditLogs_EntityType");

                    b.HasIndex("IsSuccessful")
                        .HasDatabaseName("IX_AuditLogs_IsSuccessful");

                    b.HasIndex("TableName")
                        .HasDatabaseName("IX_AuditLogs_TableName");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_AuditLogs_Timestamp");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_AuditLogs_UserId");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("WpfApp2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Departments_Code");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Departments_IsActive");

                    b.HasIndex("ManagerId")
                        .HasDatabaseName("IX_Departments_ManagerId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Departments_Name");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 500000m,
                            Code = "IT",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9489),
                            CreatedBy = "System",
                            Description = "Responsible for all technology infrastructure and software development",
                            IsActive = true,
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9592),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 200000m,
                            Code = "HR",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9957),
                            CreatedBy = "System",
                            Description = "Manages employee relations, recruitment, and organizational development",
                            IsActive = true,
                            Name = "Human Resources",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9958),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 300000m,
                            Code = "FIN",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9960),
                            CreatedBy = "System",
                            Description = "Handles financial planning, accounting, and budget management",
                            IsActive = true,
                            Name = "Finance",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9960),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            Budget = 250000m,
                            Code = "MKT",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9962),
                            CreatedBy = "System",
                            Description = "Responsible for marketing strategies and customer engagement",
                            IsActive = true,
                            Name = "Marketing",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 817, DateTimeKind.Utc).AddTicks(9978),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("WpfApp2.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("IX_Employees_DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Employees_Email");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Employees_EmployeeNumber");

                    b.HasIndex("HireDate")
                        .HasDatabaseName("IX_Employees_HireDate");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Employees_IsActive");

                    b.HasIndex("ManagerId")
                        .HasDatabaseName("IX_Employees_ManagerId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, City, State 12345",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6180),
                            CreatedBy = "System",
                            DateOfBirth = new DateTime(1995, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(5875),
                            DepartmentId = 1,
                            Email = "john.doe@company.com",
                            EmergencyContact = "Jane Doe - 555-0102",
                            EmployeeNumber = "EMP001",
                            FirstName = "John",
                            HireDate = new DateTime(2024, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(5617),
                            IsActive = true,
                            LastName = "Doe",
                            PhoneNumber = "+1-555-0101",
                            Position = "Software Engineer",
                            Salary = 75000m,
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6243),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave, City, State 12345",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6433),
                            CreatedBy = "System",
                            DateOfBirth = new DateTime(1993, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6432),
                            DepartmentId = 1,
                            Email = "jane.smith@company.com",
                            EmergencyContact = "John Smith - 555-0104",
                            EmployeeNumber = "EMP002",
                            FirstName = "Jane",
                            HireDate = new DateTime(2024, 11, 11, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6431),
                            IsActive = true,
                            LastName = "Smith",
                            PhoneNumber = "+1-555-0103",
                            Position = "Project Manager",
                            Salary = 85000m,
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6433),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine St, City, State 12345",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6438),
                            CreatedBy = "System",
                            DateOfBirth = new DateTime(1990, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6437),
                            DepartmentId = 2,
                            Email = "bob.johnson@company.com",
                            EmergencyContact = "Alice Johnson - 555-0106",
                            EmployeeNumber = "EMP003",
                            FirstName = "Bob",
                            HireDate = new DateTime(2024, 12, 31, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6436),
                            IsActive = true,
                            LastName = "Johnson",
                            PhoneNumber = "+1-555-0105",
                            Position = "HR Manager",
                            Salary = 70000m,
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6438),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm Dr, City, State 12345",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6519),
                            CreatedBy = "System",
                            DateOfBirth = new DateTime(1997, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6441),
                            DepartmentId = 1,
                            Email = "alice.brown@company.com",
                            EmergencyContact = "Tom Brown - 555-0108",
                            EmployeeNumber = "EMP004",
                            FirstName = "Alice",
                            HireDate = new DateTime(2024, 1, 16, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6440),
                            IsActive = true,
                            LastName = "Brown",
                            ManagerId = 2,
                            PhoneNumber = "+1-555-0107",
                            Position = "Senior Developer",
                            Salary = 95000m,
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6520),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Maple Ln, City, State 12345",
                            CreatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6524),
                            CreatedBy = "System",
                            DateOfBirth = new DateTime(1999, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6523),
                            DepartmentId = 3,
                            Email = "charlie.wilson@company.com",
                            EmergencyContact = "Sarah Wilson - 555-0110",
                            EmployeeNumber = "EMP005",
                            FirstName = "Charlie",
                            HireDate = new DateTime(2025, 2, 19, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6522),
                            IsActive = true,
                            LastName = "Wilson",
                            PhoneNumber = "+1-555-0109",
                            Position = "Financial Analyst",
                            Salary = 60000m,
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(6524),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("WpfApp2.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProgressPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_Projects_Code");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("IX_Projects_DepartmentId");

                    b.HasIndex("EstimatedEndDate")
                        .HasDatabaseName("IX_Projects_EstimatedEndDate");

                    b.HasIndex("Priority")
                        .HasDatabaseName("IX_Projects_Priority");

                    b.HasIndex("ProjectManagerId")
                        .HasDatabaseName("IX_Projects_ProjectManagerId");

                    b.HasIndex("StartDate")
                        .HasDatabaseName("IX_Projects_StartDate");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Projects_Status");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualCost = 75000m,
                            Budget = 150000m,
                            Code = "EPD2024",
                            CreatedAt = new DateTime(2025, 3, 31, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8130),
                            CreatedBy = "System",
                            DepartmentId = 1,
                            Description = "Development of a comprehensive enterprise portal for internal operations",
                            EndDate = new DateTime(2025, 8, 28, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(7780),
                            EstimatedEndDate = new DateTime(2025, 8, 23, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(7890),
                            Name = "Enterprise Portal Development",
                            Priority = "High",
                            ProgressPercentage = 50,
                            ProjectManagerId = 2,
                            StartDate = new DateTime(2025, 3, 31, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(7711),
                            Status = "InProgress",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8192),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            ActualCost = 10000m,
                            Budget = 80000m,
                            Code = "HSM2024",
                            CreatedAt = new DateTime(2025, 4, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8379),
                            CreatedBy = "System",
                            DepartmentId = 2,
                            Description = "Modernization of the human resources management system",
                            EndDate = new DateTime(2025, 11, 26, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8378),
                            EstimatedEndDate = new DateTime(2025, 11, 21, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8378),
                            Name = "HR System Modernization",
                            Priority = "Medium",
                            ProgressPercentage = 10,
                            ProjectManagerId = 2,
                            StartDate = new DateTime(2025, 6, 29, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8377),
                            Status = "Planning",
                            UpdatedAt = new DateTime(2025, 5, 30, 14, 26, 12, 818, DateTimeKind.Utc).AddTicks(8380),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("WpfApp2.Models.ProjectAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocationPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(100);

                    b.Property<DateTime>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UnassignedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDate")
                        .HasDatabaseName("IX_ProjectAssignments_AssignedDate");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("IX_ProjectAssignments_EmployeeId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_ProjectAssignments_IsActive");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("IX_ProjectAssignments_ProjectId");

                    b.HasIndex("ProjectId", "EmployeeId")
                        .IsUnique()
                        .HasDatabaseName("IX_ProjectAssignments_Project_Employee");

                    b.ToTable("ProjectAssignments", (string)null);
                });

            modelBuilder.Entity("WpfApp2.Models.ProjectMilestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsCritical")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProgressPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DueDate")
                        .HasDatabaseName("IX_ProjectMilestones_DueDate");

                    b.HasIndex("IsCompleted")
                        .HasDatabaseName("IX_ProjectMilestones_IsCompleted");

                    b.HasIndex("IsCritical")
                        .HasDatabaseName("IX_ProjectMilestones_IsCritical");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("IX_ProjectMilestones_ProjectId");

                    b.ToTable("ProjectMilestones", (string)null);
                });

            modelBuilder.Entity("WpfApp2.Models.AuditLog", b =>
                {
                    b.HasOne("WpfApp2.Models.Employee", "Employee")
                        .WithMany("AuditLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WpfApp2.Models.Department", b =>
                {
                    b.HasOne("WpfApp2.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WpfApp2.Models.Employee", b =>
                {
                    b.HasOne("WpfApp2.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WpfApp2.Models.Employee", "Manager")
                        .WithMany("DirectReports")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WpfApp2.Models.Project", b =>
                {
                    b.HasOne("WpfApp2.Models.Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WpfApp2.Models.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("WpfApp2.Models.ProjectAssignment", b =>
                {
                    b.HasOne("WpfApp2.Models.Employee", "Employee")
                        .WithMany("ProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfApp2.Models.Project", "Project")
                        .WithMany("ProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WpfApp2.Models.ProjectMilestone", b =>
                {
                    b.HasOne("WpfApp2.Models.Project", "Project")
                        .WithMany("Milestones")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WpfApp2.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WpfApp2.Models.Employee", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("DirectReports");

                    b.Navigation("ProjectAssignments");
                });

            modelBuilder.Entity("WpfApp2.Models.Project", b =>
                {
                    b.Navigation("Milestones");

                    b.Navigation("ProjectAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
